{"version":3,"file":"static/js/373.3388fc2c.chunk.js","mappings":"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","sources":["pages/RegisterForm/RegisterForm.js","components/base-components/FormField/FormField.js","assets/images/avatars|lazy|/^/avatar_.*/.png$/|groupOptions: {}|namespace object"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\nimport { useState, startTransition } from \"react\";\r\nimport {auth} from \"../../firebase/FireBase\";\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\n\r\n// Context and tools\r\nimport { writeToDB, writeToListDB } from '../../firebase/ReadWriteDB';\r\nimport {pickRandom, splitAndCapitalizeEmail} from \"../../utils\";\r\n\r\n\r\n//Compononets and styles\r\nimport ScreenTitle from \"../../components/base-components/ScreenTitle/ScreenTitle\";\r\nimport FormField from \"../../components/base-components/FormField/FormField\";\r\nimport BackgroundWrapper from '../../components/base-components/BackgroundWrapper';\r\nimport bg from\"../../assets/images/Fox_in_forest_background.png\";\r\nimport \"./RegisterForm.css\";\r\nimport \"../../utils.css\";\r\n\r\n\r\nexport default function RegisterForm() {\r\n       \r\n    const [email , setEmail] = useState(\"\");\r\n    const [password , setPassword] = useState(\"\");\r\n    const [passwordAuth, setPasswordAuth] = useState(\"\");\r\n    const navigation = useNavigate();\r\n    \r\n    const handleSignUp = async (e) => {\r\n        e.preventDefault(); //prevents the page from reloading\r\n        try {\r\n            await createUserWithEmailAndPassword(auth, email , password);\r\n            alert(\"Signed Up Successfully\");\r\n            writeToDB(`/users/${auth.currentUser.uid}/username/`,splitAndCapitalizeEmail(email)); //Add the username to the database\r\n            writeToListDB(`/presence/`, auth.currentUser.uid);\r\n\r\n            //More settings later...\r\n            \r\n            const avatarDecision = [\"black\",\"blue\",\"default\",\"green\",\"light_blue\",\"orange\",\"purple\",\"red\",\"yellow\"][pickRandom(9)]\r\n            console.log(\"decision = \" , avatarDecision);\r\n            const avatar = await import(`../../assets/images/avatars/avatar_${avatarDecision}.png`);\r\n            writeToDB(`/users/${auth.currentUser.uid}/settings/avatar/`, avatar.default); //Add default avatar to user's settings\r\n            startTransition(() => navigation(\"/\"));\r\n        }\r\n        catch(error) {\r\n            alert(error.message);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <BackgroundWrapper\r\n            title=\"Sign up\"\r\n            backgroundImage = {bg}\r\n            backgroundPosition = \"center\"\r\n            transition=\"background-image 0.5s ease-in-out\"\r\n            className=\"center-container\">\r\n            <div className=\"sign-up auth-form-container\">\r\n                <ScreenTitle title=\"Join our ranks!\"/>\r\n                <FormField type=\"email\" value={email} prompt=\"Email\" onChange={(e) => setEmail(e.target.value)}/>\r\n                <FormField type=\"password\" value={password} prompt=\"Password\" onChange={(e) => setPassword(e.target.value)}/>\r\n                <FormField type=\"password\" value={passwordAuth} prompt=\"Confirm Password\" onChange={(e) => setPasswordAuth(e.target.value)}/>\r\n                <input className=\"submit-button\" onClick={handleSignUp} type=\"submit\" value=\"Sign up\"/>\r\n            </div>\r\n        </BackgroundWrapper>\r\n    );\r\n}","import { useState } from \"react\";\r\n\r\nimport \"./FormField.css\";\r\nimport show from \"../../../assets/images/icons/show-password-icon.png\";\r\nimport hide from \"../../../assets/images/icons/hide-password-icon.png\";\r\n\r\n\r\n/**\r\n * FormField: A base component for a form field, which includes a label and a corresponding input field.\r\n * The label is displayed as a tooltip when the input field is focused or has input.\r\n * The input field is required.\r\n * @param {Object} props - The properties for the FormField component.\r\n * @param {String} props.type - The type of the input field, e.g. \"text\", \"password\", etc.\r\n * @param {String} props.value - The value of the input field.\r\n * @param {Function} props.onChange - The callback function when the input field's value changes.\r\n * @param {String} props.prompt - The label for the input field.\r\n * @param {String} props.styleClass - Any additional CSS classes to be added to the component's root element.\r\n */\r\n\r\nexport default function FormField(props){\r\n    const [showPassword , setShowPassword] = useState(false);\r\n    const isPassword = props.type === \"password\";\r\n    const hasContent = props.value && props.value.trim().length > 0;\r\n    return(\r\n        <div className={`form-field ${props.styleClass}`} >\r\n            <input  name={props.type} \r\n                    type={isPassword && showPassword? \"text\" : props.type} \r\n                    title= {props.type} \r\n                    value={props.value} \r\n                    onChange={props.onChange} required/>\r\n            <span className={`popup_text ${hasContent ? \"has-content\" : \"\"}`}>{props.prompt}</span>\r\n            {isPassword && \r\n                <span onClick={() => setShowPassword(prev => !prev)}>\r\n                        <img  className=\"toggle-password\" src={showPassword ?hide:show} alt=\"password toggle\"/> </span>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","var map = {\n\t\"./avatar_black.png\": [\n\t\t7217,\n\t\t217\n\t],\n\t\"./avatar_blue.png\": [\n\t\t8586,\n\t\t586\n\t],\n\t\"./avatar_default.png\": [\n\t\t8259,\n\t\t259\n\t],\n\t\"./avatar_green.png\": [\n\t\t3305,\n\t\t305\n\t],\n\t\"./avatar_light_blue.png\": [\n\t\t8021,\n\t\t21\n\t],\n\t\"./avatar_orange.png\": [\n\t\t8356,\n\t\t356\n\t],\n\t\"./avatar_purple.png\": [\n\t\t2540,\n\t\t540\n\t],\n\t\"./avatar_red.png\": [\n\t\t9241,\n\t\t241\n\t],\n\t\"./avatar_yellow.png\": [\n\t\t2426,\n\t\t426\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 1 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 3451;\nmodule.exports = webpackAsyncContext;"],"names":["RegisterForm","email","setEmail","useState","password","setPassword","passwordAuth","setPasswordAuth","navigation","useNavigate","_jsx","BackgroundWrapper","title","backgroundImage","bg","backgroundPosition","transition","className","children","_jsxs","ScreenTitle","FormField","type","value","prompt","onChange","e","target","onClick","async","preventDefault","createUserWithEmailAndPassword","auth","alert","writeToDB","currentUser","uid","splitAndCapitalizeEmail","writeToListDB","avatarDecision","pickRandom","console","log","avatar","default","startTransition","error","message","props","showPassword","setShowPassword","isPassword","hasContent","trim","length","styleClass","name","required","prev","src","hide","show","alt","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","code","ids","id","t","keys","Object","module","exports"],"sourceRoot":""}