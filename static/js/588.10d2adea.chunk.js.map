{"version":3,"file":"static/js/588.10d2adea.chunk.js","mappings":"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","sources":["hooks/useRequireAuth.js","components/GroupCard/GroupCard.js","pages/Groups/Groups.js","components/ChatList/ChatList.js","components/Message/Message.js","components/ChatRoom/ChatRoom.js","pages/Chat/Chat.js","components/base-components/TabbedContent/TabbedContent.js"],"sourcesContent":["\r\n//**This componet will be used to verify user's authentication and redirect\r\n// the user to the home page if authentication expires, instead of implementing this \r\n// redirection logic in every component, we'll just include this hook in every page component */\r\n\r\nimport { startTransition, useContext, useEffect, useState } from \"react\";\r\nimport { userContext } from \"../UserProvider\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nexport function useRequireAuth(){\r\n    const {user, loading} = useContext(userContext);\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n    \r\n    const navigate = useNavigate();\r\n    \r\n    useEffect(()=>{   \r\n        const goto = (path, options={}) => {\r\n            startTransition(() => {\r\n                navigate(path, options);\r\n            });\r\n        };\r\n\r\n        if(loading) return <div>Loading...</div>;\r\n    \r\n        if(user)\r\n            setIsAuthenticated(true);\r\n        if(!isAuthenticated && !loading) \r\n            console.log(\"User is not authenticated, redirecting...\");\r\n        if(!loading && !user)\r\n            goto(\"/\");\r\n            \r\n    },[user,loading, navigate, isAuthenticated]);\r\n}","import { startTransition, useContext, useEffect, useState } from \"react\";\r\n\r\n//Context and tools\r\nimport { userContext } from \"../../UserProvider\";\r\nimport { findAvatarDB, findUserNameDB } from \"../../firebase/ReadWriteDB\";\r\nimport axiosInstance from \"../../axiosInstance\";\r\n\r\n//Components and styles\r\nimport ScreenTitle from \"../base-components/ScreenTitle/ScreenTitle\";\r\nimport PopupModal, { ConfigureGroupWindow, InviteWindow, MembersListWindow, StatisticsNewImageWindow } from \"../base-components/PopupModal/PopupModal\";\r\nimport TabbedContent from \"../base-components/TabbedContent/TabbedContent\";\r\nimport \"./GroupCard.css\"\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n/**\r\n * \r\n * @param {object} props - Object to contain key-value pairs of arguments for the function.\r\n * @param {string} props.groupID \r\n * @param {string} props.chatID \r\n * @param {string} props.creationDate \r\n * @param {string} props.creator\r\n * @param {string} props.groupName\r\n * @param {string} props.groupImage\r\n * @param {[string]} props.members\r\n * @param {[string]} props.admins\r\n * @returns \r\n */\r\nexport default function GroupCard(props){\r\n\r\n    const {user, fetchUserPFP} = useContext(userContext);\r\n    const {creator,  groupID, chatID} = props //Don't change - no need for useState.\r\n    const [groupName, setGroupName] = useState(props.groupName);\r\n    const [groupImage, setGroupImage] = useState(\"\");\r\n    const [members, setMembers] = useState(props.members);\r\n    const [membersAvatars, setMembersAvatars] = useState([]);\r\n    const [membersUsernames, setMembersUsernames] = useState([]);\r\n    const [admins, setAdmins] = useState(props.admins);\r\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n    const [joinRequests, setJoinRequests] = useState(null);\r\n    const navigation = useNavigate();\r\n\r\n    const goTo = (path) => {\r\n        startTransition(() => {\r\n            navigation(path);\r\n        });\r\n    }\r\n    \r\n\r\n    useEffect(()=>{\r\n        const fetchGroupImage = async ()=>{\r\n            const img = props.groupImage? props.groupImage: await findAvatarDB(creator);\r\n            if(typeof img === \"string\" && img.includes(\"static\"))\r\n                setGroupImage(img);\r\n            else{\r\n                const fetchedAvatar = await fetchUserPFP(img._id, false);\r\n                console.log(`groupImage: ${img}`);\r\n                console.log(`fetchedAvatar: ${fetchedAvatar}`);\r\n                if(fetchedAvatar){\r\n                    setGroupImage(fetchedAvatar);\r\n                }\r\n            }\r\n        }\r\n\r\n        const fetchMembersImages = async (limit=-1) =>{\r\n            if(limit<0 && members){\r\n                const avatars = await Promise.all(members.map(async (member)=>{\r\n                    const avatar = await findAvatarDB(member);\r\n                    if(avatar.includes(\"static\"))\r\n                        return avatar;\r\n                    else{\r\n                        const fetchedAvatar = await fetchUserPFP(avatar, false);\r\n                        if(fetchedAvatar)\r\n                            return fetchedAvatar;\r\n                    }\r\n                }));\r\n                setMembersAvatars(avatars);\r\n            }\r\n        }\r\n\r\n        const fetchMembersUsernames = async (limit=-1) =>{ \r\n            if(limit<0 && members){\r\n                const usernames = await Promise.all(members.map(async (member)=>{\r\n                    const username = await findUserNameDB(member);\r\n                    return {username,uid:member};\r\n                }));\r\n                setMembersUsernames(usernames);\r\n            }\r\n        }\r\n        fetchGroupImage();\r\n        fetchMembersImages();\r\n        fetchMembersUsernames();\r\n        \r\n    },[props.groupImage, creator, members, fetchUserPFP]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const fetchJoinRequestsData = async ()=>{\r\n            if(!props.joinRequests || props.joinRequests.length===0) return;\r\n\r\n            const data = await Promise.all(props.joinRequests.map(async (member)=>{\r\n                if(typeof member !== \"string\") return;\r\n                const username = await findUserNameDB(member);\r\n                const avatar = await findAvatarDB(member);\r\n                if(!username || !avatar){\r\n                    console.log('possible undefined hit');\r\n                    return null;\r\n                } \r\n                //console.log(`username: ${username}, uid: ${member}, avatar: ${avatar}`);\r\n                return {username, uid:member, avatar}; \r\n            }));\r\n            setJoinRequests(data.filter(Boolean));\r\n        \r\n        }\r\n        fetchJoinRequestsData();\r\n\r\n    },[props.joinRequests])\r\n\r\n    const isJoined = ()=>{\r\n        return members && members.includes(user.uid);\r\n    }\r\n\r\n    const isAdmin = ()=>{\r\n        return admins && admins.includes(user.uid);\r\n    }\r\n\r\n    const deleteGroup = async ()=>{\r\n        try{\r\n            const response = await axiosInstance.delete(`/groups/${groupID}`); \r\n            if (response.status===200){\r\n                console.log(response.data.message);\r\n                alert(response.data.message);\r\n                props.onDelete();\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            console.log(err.response?.data?.message);\r\n        }\r\n\r\n    }\r\n\r\n     const openPopup = ()=>{\r\n        setIsPopupOpen(true);\r\n    }\r\n\r\n    const closePopup = ()=>{\r\n        setIsPopupOpen(false);\r\n    }\r\n\r\n    const kickMember = async (kickedUID)=>{\r\n        try{\r\n            console.log(`Kicking ${kickedUID} by admin:${user.uid}`);\r\n            const response = await axiosInstance.delete(`/groups/kick/${kickedUID}?groupId=${groupID}`); \r\n            if (response.status===200){\r\n                console.log(response.data?.message);\r\n                alert(response.data?.message);\r\n                setMembers(response.data?.group?.members);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            console.log(err.response?.data?.message);\r\n        }\r\n\r\n    }\r\n\r\n    const renameGroup = async (newName) =>{\r\n        try{\r\n            console.log(`New group name: ${newName}`);\r\n            const response = await axiosInstance.put(`/groups/${groupID}`, {name:newName, admin:user.uid}); \r\n            if (response.status===200){\r\n                console.log(response.data.message);\r\n                alert(response.data.message);\r\n                setGroupName(newName);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            console.log(err.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    const joinGroup = async ()=>{\r\n        try{\r\n            const payload = {groupId:groupID};\r\n            const response = await axiosInstance.post(`/groups/join/${user.uid}`, payload); \r\n            if (response.status===200){\r\n                console.log(response.data.message);\r\n                alert(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            console.log(err.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    const leaveGroup = async ()=>{\r\n        try{\r\n            if (creator===user.uid){\r\n                deleteGroup();\r\n                return;\r\n            }\r\n            const response = await axiosInstance.delete(`/groups/leave/${user.uid}?groupId=${groupID}`); \r\n            if (response.status===200){\r\n                console.log(response.data.message);\r\n                alert(response.data.message);\r\n                setMembers(response.data?.group?.members);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            console.log(err.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    const acceptMember = async(memberUID) =>{\r\n        try{\r\n            console.log(`Accepting ${memberUID} to group:${groupID}`);\r\n            const payload = {groupId:groupID};\r\n            const response = await axiosInstance.put(`/groups/accept/${memberUID}`, payload); \r\n            if (response.status===200){\r\n                console.log(response.data.message);\r\n                alert(response.data.message);\r\n                setMembers(response.data?.group?.members);\r\n                setJoinRequests(response.data?.group?.joinRequests);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            console.log(err.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    const declineMember = async(memberUID) =>{\r\n        try{\r\n            console.log(`Rejecting ${memberUID}`);\r\n            const payload = {groupId:groupID};\r\n            const response = await axiosInstance.put(`/groups/decline/${memberUID}`, payload); \r\n            if (response.status===200){\r\n                console.log(response.data.message);\r\n                alert(response.data.message);\r\n                setMembers(response.data?.group?.members);\r\n                setJoinRequests(response.data?.group?.joinRequests);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            console.log(err.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    const promoteMember = async(memberUID) =>{\r\n        try{\r\n            console.log(`Promoting ${memberUID} in group:${groupID}`);\r\n            const payload = {groupId:groupID};\r\n            const response = await axiosInstance.put(`/groups/promote/${memberUID}`, payload); \r\n            if (response.status===200){\r\n                console.log(response.data.message);\r\n                alert(response.data.message);\r\n                setMembers(response.data?.group?.members);\r\n                setAdmins(response.data?.group?.admins);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            console.log(err.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    const updateUI = (newMembers)=>{\r\n        setMembers(newMembers);\r\n    }\r\n\r\n    return (\r\n        <div id=\"group-card\">\r\n          <div id=\"group-card-header\">\r\n            <div className=\"grouped\">\r\n                <img className=\"group-image\" src={groupImage} alt=\"groupImage\"/>\r\n                <ScreenTitle title={groupName}/>\r\n            </div>\r\n            {isJoined() && (<button onClick={leaveGroup}>Leave</button>)}\r\n          </div>\r\n          <ul className=\"card-carousel\">\r\n            {membersAvatars && membersAvatars.map((avatar,index)=>{\r\n                if (index<5){\r\n                    return (  <li key={index} className=\"card-carousel-item\">\r\n                        <img className=\"group-member-avatar\" src={avatar} alt=\"usersAvatar\"/>\r\n                    </li>);\r\n                }\r\n                else return null;\r\n            }\r\n            )}\r\n          </ul>\r\n          <div id=\"group-card-footer\">\r\n            { /*The logic here is basically: If not joined -> display Join. If joined, explore, if joined and admin, display manage/del*/\r\n            !isJoined() \r\n            ? (<button onClick={joinGroup}>Join</button>)\r\n            :(<div>\r\n                <button onClick={(e)=>goTo(`/groups/feed/${groupID}`)}>Explore</button>\r\n                <button onClick={(e)=>goTo(`/chat/${chatID}`)}>Chat</button>\r\n                {isAdmin() && (<div className=\"grouped\">\r\n                <button onClick={() => openPopup()}>Manage</button>\r\n                <button onClick={deleteGroup}>Delete</button>\r\n                </div>)}\r\n            </div> )}\r\n          </div>\r\n          <PopupModal isOpen={isPopupOpen} onClose={closePopup} styleId=\"invite-modal\">\r\n           <TabbedContent\r\n                tabs={[\"New Name\",\"Members\", \"Invite\", \"New Image\"]}\r\n                tabsContent={[\r\n                    <ConfigureGroupWindow \r\n                        groupName={groupName} onRenameGroup={(newGroupName)=>renameGroup(newGroupName)} \r\n                        joinRequests={joinRequests} onAcceptInvite={acceptMember} onDeclineInvite={declineMember}/>,\r\n                    <MembersListWindow self={user.uid} members={membersUsernames} membersAvatars={membersAvatars} \r\n                    admins={admins} removeMember={kickMember} onPromote={promoteMember}/>,\r\n                    <InviteWindow onInviteFriend={(e, inviteMember)=>props.onInvite(e, inviteMember, groupID, updateUI)}/>,\r\n                    <StatisticsNewImageWindow groupId={groupID} />\r\n                ]}\r\n                tabStyleId=\"manage-group-tabs\"\r\n           />\r\n\r\n          </PopupModal>\r\n        </div>\r\n    );\r\n}","import { useContext, useState, useEffect} from \"react\";\r\n\r\n//Context and tools\r\nimport { userContext } from \"../../UserProvider\";\r\nimport { useRequireAuth } from \"../../hooks/useRequireAuth\";\r\nimport axiosInstance from \"../../axiosInstance\";\r\nimport { findUIDbyUsername } from \"../../firebase/ReadWriteDB\";\r\n\r\n// Components and styling\r\nimport bg from \"../../assets/images/scrollableBackground.png\"\r\nimport BackgroundWrapper from \"../../components/base-components/BackgroundWrapper\";\r\nimport NavigationBar from \"../../components/base-components/NavigationBar/NavigationBar\";\r\nimport SideMenu from \"../../components/SideMenu/SideMenu\";\r\nimport Field from \"../../components/base-components/Field/Field\";\r\nimport PopupModal, { InviteWindow } from \"../../components/base-components/PopupModal/PopupModal\";\r\nimport GroupCard from \"../../components/GroupCard/GroupCard\";\r\nimport Chat from \"../Chat/Chat\";\r\nimport \"./Groups.css\"\r\n\r\nexport default function Groups(props) {\r\n\r\n    const {user, loading} = useContext(userContext);\r\n    const {results} = props\r\n    useRequireAuth();\r\n\r\n    const [groups, setGroups] = useState([]);\r\n    const [newGroupName, setNewGroupName] = useState(\"\");\r\n    const [inviteGroupId, setInviteGroupId] = useState(\"\");\r\n\r\n    //Pop up\r\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        const fetchGroups = async ()=>{\r\n            const limit = 20;\r\n            try{\r\n                const response = await axiosInstance.get(`/groups/?limit=${limit}`);\r\n                if(response.status===200){\r\n                    console.log(response.data.message);\r\n                    console.log(response.data.groups);\r\n                    setGroups(response.data.groups);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                console.log(err.response?.data?.message);\r\n            }\r\n        }\r\n\r\n        if(!results || results.length===0)\r\n            fetchGroups();\r\n        else\r\n            setGroups(results);\r\n\r\n    },[results]);\r\n\r\n\r\n    const openPopup = (groupId)=>{\r\n        setIsPopupOpen(true);\r\n        setInviteGroupId(groupId);\r\n    }\r\n\r\n    const closePopup = ()=>{\r\n        setIsPopupOpen(false);\r\n    }\r\n\r\n    const createGroup = async ()=> {\r\n        const payload = {creator:user.uid, name: newGroupName};\r\n        try{\r\n            const response = await axiosInstance.post(\"/groups\", payload);\r\n            const {group, message} = response.data;\r\n            if(response.status===201){\r\n                console.log(message);\r\n                console.log(group);\r\n                setGroups((prev)=>[...prev, group]);\r\n                openPopup(group._id);\r\n            }\r\n            else{\r\n                console.log(response.data?.message);\r\n            }\r\n\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            console.log(err.response?.data?.message);\r\n        }\r\n    }\r\n    const inviteFriend = async (e, userName=\"\" , groupId, updateUI=null)=>{\r\n        \r\n        if(inviteGroupId===\"\" && !groupId ) return;\r\n\r\n        try{\r\n            console.log(`Inviting ${userName}`);\r\n            const userObj = await findUIDbyUsername(userName);\r\n            if(!userObj) return alert(\"User not found.\");\r\n            const userId = Object.keys(userObj)[0];\r\n            console.log(`DB UserID: ${userId}`);\r\n\r\n            const payloadGroupID = groupId? groupId : inviteGroupId;\r\n            console.log(`groupId: ${payloadGroupID}`);\r\n            const payload= {groupId:payloadGroupID};\r\n            const response = await axiosInstance.put(`/groups/invite/${userId}`, payload);\r\n            if(response.status===200){\r\n                console.log(response.data.message);\r\n                setGroups((prev)=>prev.map((group)=> group._id===payloadGroupID? response.data.group: group ));\r\n                alert(`Invited ${userName} to the group successfully.`);\r\n                if(updateUI) updateUI(response.data.group.members);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            console.log(err.response?.data?.message);\r\n            alert(err.response?.data?.message);\r\n            console.log(err.response?.data?.error);\r\n        }\r\n        \r\n    }\r\n\r\n    if(loading) return <div>Loading...</div>;\r\n\r\n    return(\r\n        <BackgroundWrapper\r\n            title=\"Groups\"\r\n            backgroundImage = {bg}\r\n            backgroundPosition = \"top center\"\r\n            backgroundRepeat=\"repeat-y\"\r\n            backgroundAttachment = \"scroll\"\r\n            >\r\n                \r\n            <div className=\"groups\">\r\n                <NavigationBar/>\r\n                <div className=\"page-container\" id=\"groups-page-container\">\r\n                    <SideMenu />\r\n                    <div id=\"group-list-wrapper\">\r\n                        <div id=\"new-group-form\">\r\n                            <Field\r\n                                inputStyle=\"new-group-field\"\r\n                                type=\"text\"\r\n                                value={newGroupName}\r\n                                onChange={(e)=>setNewGroupName(e.target.value)}\r\n                                prompt=\"New group name..\"/>\r\n                            <button className=\"submit-button\" id=\"create-group-button\" \r\n                                    onClick={()=>{\r\n                                        if(window.confirm(`Are you sure you want to create the group ${newGroupName}?`)){\r\n                                            createGroup();\r\n                                        }\r\n                                        }}>\r\n                                Create\r\n                            </button>\r\n                        </div>\r\n                        <div id=\"groups-list\">\r\n                            {user && groups.length>0 && groups.map((group)=>(\r\n                            <GroupCard\r\n                                key={group._id}\r\n                                groupID={group._id}\r\n                                groupImage={group.logo}\r\n                                groupName={group.name}\r\n                                creator={group.creator}\r\n                                creationDate={group.creationDate}\r\n                                members={group.members}\r\n                                admins={group.admins}\r\n                                chatID={group.chatId}\r\n                                joinRequests={group.joinRequests}\r\n                                onDelete={()=>{\r\n                                    const newGroups = groups.filter((g)=>g._id!==group._id);\r\n                                    setGroups(newGroups);\r\n                                }}\r\n                                onInvite={inviteFriend}\r\n\r\n                            />))}\r\n                        </div>\r\n                    </div>\r\n                    <Chat miniView={true}/>\r\n                    \r\n                </div>\r\n                <PopupModal styleId=\"invite-popup\" onClose={closePopup} isOpen={isPopupOpen}>\r\n                    <InviteWindow onInviteFriend={inviteFriend}/>\r\n                </PopupModal>\r\n            </div>\r\n\r\n        </BackgroundWrapper>\r\n    );\r\n}","import { useContext, useEffect, useState } from \"react\";\r\n\r\n//Context and tools\r\nimport { userContext } from \"../../UserProvider\";\r\nimport { extractAcronym } from \"../../utils\";\r\nimport { findAvatarDB, findUserNameDB } from \"../../firebase/ReadWriteDB\";\r\nimport axiosInstance from \"../../axiosInstance\";\r\n\r\n//Components and styles\r\nimport \"./ChatList.css\"\r\nimport ScreenTitle from \"../base-components/ScreenTitle/ScreenTitle\";\r\n\r\n\r\nexport default function ChatList(props){\r\n\r\n    \r\n    const [chatThumbnails, setChatThumbnails] = useState([]);\r\n    const {user, loading} = useContext(userContext);\r\n    const [chatList, setChatList] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        const fetchChatList = async () => {\r\n            const limit = 20;\r\n            try{\r\n                const response = await axiosInstance.get(`/chats/?userId=${user.uid}&limit=${limit}`);\r\n                if (response.status===200){\r\n                    //DEBUG: console.log(response.data.message);\r\n                    //DEBUG: console.log(response.data.chats);\r\n                    setChatList(response.data.chats);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                console.log(err.response?.data?.message);\r\n            }\r\n        }\r\n        fetchChatList();\r\n    }, [user]);\r\n    \r\n    useEffect(() => {\r\n        const fetchChatThumbnails = async (limit=-1) => {\r\n                if(limit<0 && chatList){\r\n                    //DEBUG: console.log(\"Attempting to pull users's chats list names/images\")\r\n                    const thumbnails = await Promise.all(chatList.map(async (chatItem) => {\r\n                        const avatar = chatItem.isGroupChat\r\n                        ? await findAvatarDB(chatItem.creator)\r\n                        : await findAvatarDB(chatItem.participants.find(member => member !== user?.uid));\r\n\r\n                        //DEBUG: console.log(avatar);\r\n                        //DEBUG: console.log(chatItem);\r\n                        let label = \"N/A\"\r\n                        try{\r\n                            if(!chatItem.isGroupChat) \r\n                                label = await findUserNameDB(chatItem.participants.find(member => member !== user?.uid));\r\n                            else{\r\n                                const response = await axiosInstance.get(`/groups/search/${chatItem.group._id}`);\r\n                                if(response.status===200){\r\n                                    label = response.data.group.name;\r\n                                    //DEBUG console.log(label);\r\n                                }\r\n                            }\r\n                        }catch(err){\r\n                            console.log(err);\r\n                        }\r\n                        if(label?.length>10) {\r\n                            if(label.split(\" \").length>1)\r\n                                label = extractAcronym(label).slice(0,3);          \r\n                            else\r\n                                label = label.slice(0,7);\r\n                        }\r\n                        //DEBUG: console.log(`label: ${label} avatar: ${avatar}`);\r\n\r\n                        return {avatar, label};\r\n                    }));\r\n                    setChatThumbnails(thumbnails);\r\n                }\r\n        }\r\n        fetchChatThumbnails();\r\n    }, [chatList,user]);\r\n\r\n    const openChat =(chatIndex)=>{\r\n        console.log(\"opening chat\", chatIndex);\r\n        props.setChatSelected(chatIndex);\r\n    }\r\n    \r\n    if(loading) return <div>Loading...</div>;\r\n    \r\n    return(\r\n    <div className=\"docked-container\" id=\"chat-list-container\">\r\n        <ul className=\"chat-list\">\r\n            {chatThumbnails.map((thumbnail, index) => (\r\n                <li onClick={(e)=>openChat(chatList[index]._id)} className=\"grouped chat-item\" id=\"chat-i\" key={index}>\r\n                    <img id=\"chat-avatar\" src={thumbnail.avatar} alt={thumbnail.label} />\r\n                    <ScreenTitle title={thumbnail.label} designClass=\"chat-title\"/>\r\n                </li>\r\n            ))}\r\n        </ul>    \r\n    </div>\r\n\r\n    );\r\n}","import { useContext, useEffect, useState } from \"react\";\r\n\r\n//Context and tools\r\nimport { findAvatarDB, findUserNameDB } from \"../../firebase/ReadWriteDB\";\r\nimport { userContext } from \"../../UserProvider\";\r\nimport { timeSincePost } from \"../../utils\";\r\n\r\n//Components and styles\r\nimport \"./Message.css\";\r\n\r\nexport default function Message(props){\r\n    const [avatar, setAvatar] = useState(\"\");\r\n    const [userName, setUsername] = useState(\"\");\r\n    const {message} = props\r\n    const {user, fetchUserPFP} = useContext(userContext);\r\n\r\n    useEffect(()=>{\r\n        const fetchAvatarAndUsername = async () => {\r\n            try{\r\n                const avatar = await findAvatarDB(message.author);\r\n                const username = await findUserNameDB(message.author);\r\n                if(avatar.includes(\"static\")) \r\n                    setAvatar(avatar);\r\n                else{\r\n                    const fetchedAvatar = await fetchUserPFP(avatar, false);\r\n                    if(fetchedAvatar)\r\n                        setAvatar(fetchedAvatar);\r\n                }\r\n                setUsername(username);\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchAvatarAndUsername();\r\n    }, [message.author, fetchUserPFP]);\r\n\r\n\r\n    return(\r\n        <li className=\"message grouped\">\r\n            {message.author === user?.uid\r\n            ? (\r\n                <>\r\n                    <img src={avatar} alt={`message-avatar`} id=\"message-avatar\"/>\r\n                    <div className=\"message-content\">\r\n                        <div className=\"message-time\">{timeSincePost(message.timestamp)}</div>\r\n                        <div className=\"chat-bubble\">\r\n                            <div className=\"message-username\"><strong>{userName}</strong></div>\r\n                            <div className=\"message-text\">{message.content}</div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n            : (\r\n                <>\r\n                <div className=\"message-content\">\r\n                    <div className=\"message-time right\">{timeSincePost(message.timestamp)}</div>\r\n                    <div className=\"chat-bubble right\">\r\n                        <div className=\"message-username right\"><strong>{userName}</strong></div>\r\n                        <div className=\"message-text right\">{message.content}</div>\r\n                    </div>\r\n                </div>\r\n                <img src={avatar} alt={`message-avatar`} id=\"message-avatar\"/>\r\n                </>\r\n            )}\r\n            \r\n        </li>\r\n    );\r\n}","import { useContext, useEffect, useRef, useState } from 'react';\r\nimport {io} from 'socket.io-client';\r\nimport axiosInstance from '../../axiosInstance';\r\nimport { userContext } from '../../UserProvider';\r\nimport Message from '../Message/Message';\r\nimport Field from '../base-components/Field/Field';\r\n\r\nimport \"./ChatRoom.css\"\r\n\r\n\r\n\r\n\r\nexport default function ChatRoom(props){\r\n    \r\n    const socketRef = useRef(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const {user, token} = useContext(userContext);\r\n    const endRef = useRef(null);\r\n    const {chatId} = props;\r\n    const [joined, setJoined] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchMessage = async () => {\r\n            setMessages([]);\r\n            \r\n            try{\r\n                console.log(`Attempting to pull messages for chat ${chatId}`);\r\n                const response = await axiosInstance.get(`/chats/${chatId}`);\r\n                if (response.status===200){\r\n                    console.log(response.data.message);\r\n                    //DEBUG: console.log(response.data.messages);\r\n                    setMessages(response.data.messages);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                console.log(err.response?.data?.message);\r\n            }\r\n        }\r\n        fetchMessage();\r\n    },[chatId]);\r\n\r\n\r\n    useEffect(() => {\r\n        if(!chatId || !token) return;\r\n        const socket = io('http://localhost:42069');\r\n        socketRef.current = socket; \r\n        \r\n        if(socket.current===null) {\r\n            console.log(`socket is null`);\r\n            return;};\r\n        //console.log(`token: ${token}`);\r\n       \r\n        socket.emit('authenticate', token);\r\n\r\n        \r\n        socket.on('authenticated', (response)=>{ \r\n            console.log(response?.message);\r\n            socket.emit('joinChat', chatId);\r\n        });\r\n        \r\n        socket.on('joinedChat', (response)=>{ console.log(response?.message); setJoined(true);});\r\n\r\n        socket.on('message', (msg) => {\r\n            //DEBUG: console.log(socket.id);\r\n            //DEBUG: console.log(msg.content);\r\n            setMessages(prev=>[...prev, msg]);\r\n        });\r\n\r\n        socket.on('error', (errObj) =>{\r\n            console.log(errObj?.message);            \r\n        });\r\n\r\n        return () => {\r\n          if(socketRef.current){\r\n            socketRef.current.disconnect();\r\n            socketRef.current = null;\r\n          }\r\n          setJoined(false);\r\n          setMessages([]);\r\n        }\r\n    },[chatId, token]);\r\n\r\n    useEffect(() => {\r\n        endRef.current?.scrollIntoView({behavior: \"smooth\"});\r\n    },[messages]);\r\n\r\n    const sendMessage = async () => {\r\n        if(!input.trim() || !joined){\r\n            console.log(`input is empty`);\r\n            if(!joined)\r\n                console.log(`not joined`);\r\n            return; //Empty string.\r\n        } \r\n        socketRef.current.emit('message', {author: user.uid, content: input, chat: chatId});\r\n        setInput('');\r\n    }\r\n    return(\r\n    <div className=\"chat-room\">\r\n        <ul className=\"messages\">\r\n            {(messages.length>0) && messages.map((message,index)=>(<Message key={index} message={message}/>))}\r\n        </ul>\r\n        <div ref={endRef}></div>\r\n        <div className=\"chat-input grouped\">\r\n            <Field value={input} onChange={(e)=>setInput(e.target.value)} prompt=\"Message...\"\r\n                onKeyDown={(e)=> e.key===\"Enter\" && sendMessage()}/>\r\n            <button onClick={sendMessage}>Send</button>\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n}","import {  useEffect, useState } from \"react\";\r\n//import {useContext} from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\n//Context and tools\r\n//import { userContext } from \"../../UserProvider\";\r\nimport { useRequireAuth } from \"../../hooks/useRequireAuth\";\r\n\r\n//Components and styles\r\nimport bg from \"../../assets/images/scrollableBackground.png\";\r\nimport ChatList from \"../../components/ChatList/ChatList\";\r\nimport ChatRoom from \"../../components/ChatRoom/ChatRoom\";\r\nimport SideMenu from \"../../components/SideMenu/SideMenu\";\r\nimport NavigationBar from \"../../components/base-components/NavigationBar/NavigationBar\";\r\nimport BackgroundWrapper from \"../../components/base-components/BackgroundWrapper\";\r\nimport Field from \"../../components/base-components/Field/Field\";\r\nimport \"./Chat.css\";\r\n\r\nexport default function Chat({miniView = false}){\r\n    \r\n    const {chatId} = useParams();\r\n    const [chatSelected, setChatSelected] = useState(chatId || null);\r\n    const navigation = useNavigate();\r\n    //const {user} = useContext(userContext);\r\n    useRequireAuth();\r\n\r\n    useEffect(()=>{\r\n        if(chatId!==chatSelected) setChatSelected(chatId);\r\n    },[chatId, chatSelected]);\r\n\r\n\r\n    const handleChatSelect = (id)=>{\r\n        setChatSelected(id);\r\n        navigation(`/chat/${id}`);\r\n        \r\n    }\r\n    \r\n    if( miniView)\r\n        return (<ChatList setChatSelected={handleChatSelect}/>)\r\n\r\n    return(\r\n        <BackgroundWrapper\r\n            title=\"Chat\"\r\n            backgroundImage = {bg}\r\n            backgroundPosition = \"top center\"\r\n            backgroundRepeat=\"repeat-y\"\r\n            backgroundAttachment = \"scroll\"\r\n            >\r\n\r\n            <div className=\"chat\">\r\n                <NavigationBar/>\r\n                <SideMenu/>\r\n                <div className=\"page-container\" id=\"chat-container\">\r\n                    <div className=\"grouped\">\r\n                        <Field type=\"text\" prompt=\"Search...\" styleClass=\"search-bar\" styleId=\"chat-search\"/>\r\n                        <button>Search</button>\r\n                    </div>\r\n                    {chatSelected  && (<ChatRoom chatId={chatSelected} />) }   \r\n                </div>\r\n                <ChatList setChatSelected={handleChatSelect}/>\r\n            </div>\r\n        </BackgroundWrapper>\r\n    );\r\n}","import { useState } from \"react\";\r\n\r\nimport \"./TabbedContent.css\";\r\n\r\n/**\r\n * TabbedContent: A functional component that creates a tabbed interface.\r\n * Given an array of strings (tab names) and an array of JSX elements (content),\r\n * it will create a tabbed interface with the given tab names and content,\r\n * and will switch between the content based on the selected tab.\r\n * The component will automatically default to the first tab.\r\n * @param {object} props - The properties for the TabbedContent component.\r\n * @param {string[]} props.tabs - An array of tab names.\r\n * @param {JSX.Element[]} props.content - An array of JSX elements to be used as the content for each tab.\r\n * @param {string} [props.tabStyleId] - An optional string to be used as the CSS id for each tab.\r\n */\r\nexport default function TabbedContent(props){\r\n\r\n    const [tab, setTab] = useState(props.tabs[0]); //Default to first tab\r\n\r\n    return(\r\n    <>\r\n        <div className=\"tabs\">\r\n            {props.tabs.map((tabItem, index)=>\r\n                <button key={index} className={`tab-link ${tab===tabItem? \"active\": \"\"}`} id={props.tabStyleId?? \"\"} onClick={() => setTab(tabItem)}>{tabItem.charAt(0).toUpperCase() + tabItem.slice(1)}</button>\r\n            )}\r\n        </div>\r\n\r\n            {props.tabsContent?.map((content, index)=>\r\n\r\n            <div key={index} className={`tab-content ${tab===props.tabs[index]? \"active\": \"\"}`} id={`tab-${props.tabs[index]}`}>\r\n                {content}\r\n            </div>\r\n            )}\r\n          \r\n    </>);\r\n}"],"names":["useRequireAuth","user","loading","useContext","userContext","isAuthenticated","setIsAuthenticated","useState","navigate","useNavigate","useEffect","_jsx","children","console","log","path","options","arguments","length","undefined","startTransition","goto","GroupCard","props","fetchUserPFP","creator","groupID","chatID","groupName","setGroupName","groupImage","setGroupImage","members","setMembers","membersAvatars","setMembersAvatars","membersUsernames","setMembersUsernames","admins","setAdmins","isPopupOpen","setIsPopupOpen","joinRequests","setJoinRequests","navigation","goTo","async","img","findAvatarDB","includes","fetchedAvatar","_id","fetchGroupImage","avatars","Promise","all","map","avatar","member","fetchMembersImages","usernames","username","findUserNameDB","uid","fetchMembersUsernames","data","filter","Boolean","fetchJoinRequestsData","isJoined","deleteGroup","response","axiosInstance","delete","status","message","alert","onDelete","err","_err$response","_err$response$data","updateUI","newMembers","_jsxs","id","className","src","alt","ScreenTitle","title","onClick","_response$data4","_response$data4$group","group","_err$response5","_err$response5$data","index","e","payload","groupId","post","_err$response4","_err$response4$data","PopupModal","isOpen","onClose","closePopup","styleId","TabbedContent","tabs","tabsContent","ConfigureGroupWindow","onRenameGroup","newGroupName","newName","put","name","admin","_err$response3","_err$response3$data","renameGroup","onAcceptInvite","memberUID","_response$data5","_response$data5$group","_response$data6","_response$data6$group","_err$response6","_err$response6$data","onDeclineInvite","_response$data7","_response$data7$group","_response$data8","_response$data8$group","_err$response7","_err$response7$data","MembersListWindow","self","removeMember","kickedUID","_response$data","_response$data2","_response$data3","_response$data3$group","_err$response2","_err$response2$data","onPromote","_response$data9","_response$data9$group","_response$data10","_response$data10$grou","_err$response8","_err$response8$data","InviteWindow","onInviteFriend","inviteMember","onInvite","StatisticsNewImageWindow","tabStyleId","Groups","results","groups","setGroups","setNewGroupName","inviteGroupId","setInviteGroupId","get","fetchGroups","createGroup","prev","inviteFriend","userName","userObj","findUIDbyUsername","userId","Object","keys","payloadGroupID","error","BackgroundWrapper","backgroundImage","bg","backgroundPosition","backgroundRepeat","backgroundAttachment","NavigationBar","SideMenu","Field","inputStyle","type","value","onChange","target","prompt","window","confirm","logo","creationDate","chatId","newGroups","g","Chat","miniView","ChatList","chatThumbnails","setChatThumbnails","chatList","setChatList","chats","fetchChatList","thumbnails","_label","chatItem","isGroupChat","participants","find","label","split","extractAcronym","slice","fetchChatThumbnails","thumbnail","openChat","chatIndex","setChatSelected","designClass","Message","setAvatar","setUsername","author","fetchAvatarAndUsername","_Fragment","timeSincePost","timestamp","content","ChatRoom","socketRef","useRef","messages","setMessages","input","setInput","token","endRef","joined","setJoined","fetchMessage","socket","io","current","emit","on","msg","errObj","disconnect","_endRef$current","scrollIntoView","behavior","sendMessage","trim","chat","ref","onKeyDown","key","_ref","useParams","chatSelected","handleChatSelect","styleClass","_props$tabsContent","tab","setTab","tabItem","_props$tabStyleId","charAt","toUpperCase"],"sourceRoot":""}